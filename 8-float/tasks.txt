Задача 1. Космический симулятор
Вы пишете симулятор космических полётов. Ваш звездолёт массой m килограмм включает двигатель с силой тяги F ньютонов на t секунд. 
Напишите программу, которая по заданным F, m и t покажет, на каком расстоянии от первоначального положения окажется космический корабль через t секунд.
Обеспечьте контроль ввода.
Примечание: космический корабль находится в открытом космосе.


Задача 2. Друзья Оушена
Банковский сейф оборудован механическим кодовым замком, состоящим из N крутящихся ручек, каждая из которых имеет K положений. 
Существует только одна комбинация положений всех N ручек, которая открывает сейф. Чтобы его открыть, достаточно перебрать все существующие комбинации. 
На проверку одной комбинации уходит в среднем T секунд, где T — вещественное число. 
Напишите программу, которая по заданным N, K и T определяет время, которое потребуется для перебора всех комбинаций и гарантированного открытия сейфа. 
Не используйте циклы. Обеспечьте контроль ввода.

Задача 3. Immolate Improved!
Мы придумываем фэнтезийную онлайн-игру в жанре RPG. 
В орка стреляют огненными шарами разной степени мощности, но у него есть очки здоровья и показатель сопротивляемости магии. 
Очки здоровья, сопротивляемость магии и мощность огненного шара — это вещественные числа от нуля до единицы включительно. 
Чем больше мощность, тем больше урон здоровью, но чем больше сопротивляемость магии, тем урон меньше. 
Например, если сопротивляемость равна нулю (0%), то будет нанесен урон равный мощности огненного шара. 
Если сопротивляемость равна единице (100%), урон будет равен нулю, даже если мощность заклинания максимальна. 
Напишите программу, в которой пользователь сначала задаёт количество здоровья и сопротивляемость магии орка, 
а после стреляет в него огненными шарами разной мощности, пока орк не погибнет. Мощность удара вводится с клавиатуры с каждым выстрелом. 
После каждого заклинания программа выводит на экран итоговый урон от удара, и оставшиеся очки здоровья орка.
Обеспечьте контроль ввода.

Задача 4. Игрушечная история
Вы решили открыть бизнес по производству игровых деревянных кубиков для детей. 
Вы узнали, что лучше всего продаются кубики со стороной 5 сантиметров в наборах по несколько штук, 
причём кубиков в наборе должно быть достаточно, чтобы сложить из них один большой куб. 
Для изготовления кубиков к вам в мастерскую поступают деревянные бруски в форме прямоугольных параллелепипедов любых размеров.

Для оптимизации бизнес-процессов напишите программу, которая по заданным размерам исходного бруска определяет, 
сколько кубиков из него можно изготовить, можно ли из них составить набор для продажи, и если можно, то максимальное число кубиков в этом наборе. 
Все кубики должны быть из цельного дерева без использования клея. Размеры бруска — вещественные числа. Обеспечьте контроль ввода.

Пример
Ввод:
Введите размеры бруска
X: 5;
Y: 35.76;
Z: 35.05.

Вывод:
Из этого бруска можно изготовить 49 кубиков.
Из них можно составить набор из 27 кубиков.

Задача 5. Убийца Steam
Вы пишете программу-инсталлятор для компьютерной игры. 
Пока обновление скачивается, пользователю нужно показать прогресс загрузки, чтобы он мог решить, подождать ему у экрана компьютера или заварить чай.
Напишите программу, принимающую на вход размер файла обновления в мегабайтах и скорость интернет-соединения в мегабайтах в секунду. 
В каждую секунду программа показывает, сколько процентов от общего объема обновления уже скачано, до тех пор, пока файл не загрузится. 
После установки обновления программа выводит время в секундах, которое заняло скачивание. Обеспечьте контроль ввода. 

Пример
Ввод:
Укажите размер файла для скачивания: 123.
Какова скорость вашего соединения? 27.

Вывод:
Прошло 1 сек. Скачано 27 из 123 МБ (22%).
Прошло 2 сек. Скачано 54 из 123 МБ (44%).
Прошло 3 сек. Скачано 81 из 123 МБ (66%).
Прошло 4 сек. Скачано 108 из 123 МБ (88%).
Прошло 5 сек. Скачано 123 из 123 МБ (100%).

Задача 6. Красный Марс 2.0
С вашей помощью компания «Спейс Инжиниринг» успешно высадила марсоход на поверхность Красной планеты, и вас назначили его оператором! 
Чтобы система навигации работала исправно, был запущен GPS-спутник, измеряющий координаты марсохода. 
К сожалению, из-за непреодолимых трудностей работы в космосе, марсоход не удалось разместить ближе, чем на 0,001 а. е. (астрономических единиц) к спутнику. 
Тем не менее, необходимо учитывать координаты марсохода относительно спутника с точностью до метра. 
Напишите программу для управления марсоходом наподобие той, которую вы делали в задаче «Красный Марс», 
только теперь начальные координаты X и Y марсохода равны 0,001 а. е. и 0 соответственно, 
а каждое нажатие W, S, A или D изменяет соответствующую координату на 1 метр. (1 а. е. — единица измерения расстояния, приблизительно равна 1.496e+11 метров).

Примечание: поверхность планеты считать плоской. При этом у поверхности нет границ.
Примечание: координаты отображать в метрах.

Задача 7. Кенийский бегун
Самуэль родился в Кении, и когда немного подрос, решил сделать карьеру профессионального бегуна. 
Во время тренировок на стадионе он стал запоминать свой темп на каждом километре с помощью простых наручных часов с секундной стрелкой. 
После тренировки он хотел бы узнать свой средний темп бега, но не может этого сделать: в Кении дети, решившие стать бегунами, обычно не ходят в школу. 
Помогите Самуэлю.
Напишите программу для расчёта среднего темпа бега. 
Темп измеряется в секундах на километр и означает количество времени, которое бегун потратит на преодоление одного километра. 
Программа должна получить на вход количество километров, покрытое за тренировку, и темп в секундах на каждый из этих километров. 
На выходе программа выводит на экран средний темп в минутах и секундах за всю тренировку. Обеспечьте контроль ввода. 

Пример
Ввод:
Привет, Сэм! Сколько километров ты сегодня пробежал? 6.
Какой у тебя был темп на километре 1? 305.
Какой у тебя был темп на километре 2? 291.
Какой у тебя был темп на километре 3? 343.
Какой у тебя был темп на километре 4? 255.
Какой у тебя был темп на километре 5? 279.
Какой у тебя был темп на километре 6? 312.

Вывод:
Твой средний темп за тренировку: 4 минуты 58 секунд.

Задача 8. Биолаборатория 2.0
Благодаря вашей помощи компания «Терран Биотех» вышла на финишную прямую в борьбе со всемирной эпидемией королебактерий. 
Однако прошлая симуляция была недостаточно точной, да и новая версия антибиотика работает по-другому.
В чашку Петри добавляется W капель воды, D капель чистого антибиотика и подселяется N королебактерий. 
Известно, что каждую минуту количество бактерий изменяется прямо пропорционально концентрации антибиотика в растворе 
по формуле Nnew = 2*Nold - Nold * D / W, где Nold — количество королебактерий минуту назад, Nnew — их новое количество, а D / W — концентрация действующего антибиотика. 
При этом каждую минуту 20% от всего количества антибиотика разлагается и больше не действует.
Напишите программу, которая получает на вход значения W, D и N и симулирует процесс в течение 20 минут, 
для каждой минуты выводя на экран текущую концентрацию антибиотика и количество живых королебактерий в чашке Петри.

Задача 9. Маятник
Известно, что амплитуда качающегося маятника с каждым разом затухает на 8,4% от амплитуды прошлого колебания. 
Если качнуть маятник, он, строго говоря, никогда не остановится: его амплитуда будет уменьшаться до тех пор, пока мы не сочтём такой маятник остановившимся. 
Напишите программу, определяющую, сколько раз качнётся маятник, прежде чем он, по нашему мнению, остановится. 
Программа получает на вход начальную амплитуду колебания в сантиметрах и конечную амплитуду его колебаний, которая считается остановкой маятника. 
Обеспечьте контроль ввода.

Задача 10. Яйца
В рамках программы колонизации Марса, компания «Спейс Инжиниринг» вывела особую породу черепах, которые должны размножаться, откладывая яйца в марсианском грунте. 
Откладывать яйца слишком близко к поверхности опасно из-за радиации, а слишком глубоко — опасно из-за давления грунта и недостатка кислорода. 
Вообще факторов много, но специалисты проделали большую работу и предположили, что уровень опасности для черепашьих яиц рассчитывается 
по формуле D = x^3 - 3x^2 - 12x + 10, где x — глубина кладки в метрах, а D — уровень опасности в условных единицах. 
Для тестирования гипотезы нужно взять пробу грунта на безопасной, согласно формуле, глубине.
Напишите программу, находящую такое значение глубины х, при котором уровень опасности наиболее близок к нулю, учитывая допустимое отклонение. 
На вход программе подаётся максимально допустимое отклонение уровня опасности от нуля, а программа должна рассчитать приблизительное значение х, 
удовлетворяющее этому отклонению. Известно, что глубина точно больше нуля и меньше 4 метров.
Обеспечьте контроль ввода.
Примечание. Считать, что отрицательный уровень опасности — это тоже плохо. Нужно найти наиболее близкий к нулю уровень опасности.

Пример
Ввод:
Введите максимально допустимый уровень опасности: 0,01.

Вывод:
Приблизительная глубина безопасной кладки: 0,732422 метра.


Задача 11. Тяжело в учении, легко в бою (необязательная)
Вы встретились со своим старым другом, который тоже изучает программирование, правда, в другом учебном заведении. 
За чашкой кофе он пожаловался вам, что сумасбродный препод дал им задание написать программу, которая из двух введённых чисел определяет наибольшее, 
не используя при этом условных операторов и циклов. Радуясь, что на вашем курсе такого не требуют, вы всё-таки решаете помочь своему другу. 
Напишите для него эту программу.