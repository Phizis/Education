Задача 1. Кукушка.
Напишите программу, которая имитировала бы часы с кукушкой. 
В начале работы она спрашивает, который час, а затем нужное количество раз пишет “Ку-ку!”. 
При выполнении задания необходимо обеспечить контроль ввода (например, количество часов не может быть отрицательным).

Задача 2. Коллекторы.
Напишите робота для коллекторов. 
В самом начале он спрашивает имя должника и сумму долга, а затем начинает требовать у него погашения долга до тех пор, 
пока он не введет нужную сумму (равную сумме долга или больше).
Пример сообщения: “Василий, ваша задолженность составляет 100 рублей. Сколько рублей вы внесете прямо сейчас, чтобы ее погасить?”.
После погашения долга сообщите об этом пользователю и поблагодарите его. Обеспечьте контроль ввода.

Задача 3. Слишком большие числа.
У неудачливого бухгалтера все опять идет наперекосяк: 
ему приносят такие большие счета, что числа не помещаются на бумаге. 
Напишите программу, которая считала бы для него, сколько цифр (знаков) во вводимом числе.

Задача 4. Коллекторы 2.0.
Улучшите робота-коллектора. 
Теперь сумма долга должна уменьшаться, если пользователь ввел сумму, меньшую чем сумму долга. 
Также обеспечьте контроль ввода. 
Если пользователь внес большую сумму, чем требуется для погашения, выведите сообщение о том, какой у него остаток на счету после такой операции.

Задача 5. Счастливый билетик.
В старину, когда даже в столице билеты в общественном транспорте выдавали контролеры, существовало поверье: 
если на билете сумма первых трех цифр в номере билета равна сумме последних трех, то это к удаче. 
Напишите программу, которая получала бы на входе шестизначный номер билета и выводила, счастливый ли это билет или нет. 
К примеру, билеты 666 666 и 252 135 - счастливые, а 123 456 - нет.

Задача 6. Степень двойки.
Напишите программу, которая проверяет, является ли данное число степенью двойки. 
Например, степенями двойки являются числа 1, 2, 4, 8, 16, 32 и так далее. 
Не забудьте, что числа больше чем 2147483647 в переменных типа int недопустимы. 
Программа должна быть короткой. Решение с ручным перебором всех вариантов через if не будет засчитано.

Задача 7. Числа Фибоначчи.
Числами Фибоначчи называется следующая последовательность чисел: 1, 1, 2, 3, 5, 8, 13 и так далее 
(первое число равно 1, второе число равно 1, а каждое следующее равно сумме двух предыдущих). 
Напишите программу, которая по данному номеру N выводит N-е число этой последовательности (если оно не превосходит 2147483647, конечно же). 
Обеспечьте контроль ввода.

Задача 8. Сокращение дроби.
Пользователь вводит числа M и N. 
Напишите программу, которая преобразует дробь M/N к несократимому виду и выдает получившийся результат. 
Необходимо обеспечить контроль ввода.
Например, при введенных числах 4 6 результатом должно быть 2/3.
При числах 25 40 результатом должно быть 5/8.

Задача 9. Вклады.
Вклад в банке составляет X рублей. 
Ежегодно он увеличивается на P процентов, после чего дробная часть копеек отбрасывается. 
Определите, через сколько лет вклад составит не менее Y рублей. 
Напишите программу, которая по данным числам X, Y, P определяет, сколько лет пройдет, прежде чем сумма достигнет значения Y.

Задача 10. Угадай число - наоборот.
Напишите программу, которая угадывает число, задуманное пользователем. 
Число загадывается в диапазоне от 0 до 63. 
Программа задает вопросы вида “ваше число больше такого-то?” и на основе ответов пользователя “да” или “нет” угадывает число.