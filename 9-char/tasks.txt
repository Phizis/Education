1. Время в пути
Поезд отправляется в AA часов BB минут и прибывает в пункт назначения в CC часов DD минут. Сколько часов и минут он находится в пути?
Напишите программу, которая принимает от пользователя две строки — время отправления и время прибытия поезда. 
Время задается строкой из 5 символов в формате HH:MM. Обеспечьте контроль ввода, проверьте также, что время корректно.
Программа должна ответить, сколько часов и минут поезд находится в пути. 
Если время отправления больше времени прибытия, считайте, что поезд прибывает в пункт назначения на следующий день.

Примеры:
Введите время отправления: 07:15
Введите время прибытия: 16:55
Поезд находится в пути 9 часов 40 минут

Введите время отправления: 21:10
Введите время прибытия: 08:05
Поезд находится в пути 10 часов 55 минут

2. Быки и коровы
В логической игре “быки и коровы” первый игрок загадывает четырехзначное число (оно может начинаться и с нулей), а второй игрок должен его отгадать. 
Отгадывание происходит так: своим ходом второй игрок называет любое четырехзначное число, а первый ему отвечает, сколько в этом числе “быков” и сколько “коров”. 
Корова — это цифра, которая совпадает по значению с какой-то из цифр задуманного числа, но стоит не на нужном месте. 
Бык — это цифра, совпадающая с цифрой в задуманном числе и по значению, и по расположению.
Вам нужно написать программу, которая по загаданному числу и по названному вторым игроком числу определяет, сколько во втором числе “быков” и сколько “коров”. 
Не забудьте, что числа могут начинаться с нулей!

Примечание. Сумма быков и коров не может быть больше 4.

Примеры:
Введите задуманное число: 5671
Введите второе число: 7251
Быков: 1, коров: 2

Введите задуманное число: 1234
Введите второе число: 1234
Быков: 4, коров: 0

Введите задуманное число: 0023
Введите второе число: 2013
Быков: 2, коров: 1

Введите задуманное число: 1111
Введите второе число: 1111
Быков: 4, коров: 0

3. Длинное вещественное число
Вы решили разработать программу-калькулятор, которая складывает числа сколь угодно большой длины. 
Для этого вы планируете работать с ними как со строками. 
Первая проблема, с которой вы столкнулись, — по данной строке нужно понять, является она корректной записью вещественного числа или нет.
Корректной записью считается запись, удовлетворяющая следующим условиям. Первым символом в ней должна быть либо цифра, либо знак минус. 
После этого может идти еще несколько цифр (возможно, ни одной). Затем может идти точка, отделяющая целую часть от дробной. 
До точки может и не быть цифр. В таком случае считается, что до точки стоит 0. После точки еще несколько цифр (возможно, ни одной). 
Хотя бы одна цифра в записи числа должна присутствовать. (Для простоты в этой задаче мы не будем рассматривать числа в экспоненциальной записи, такие как 1.2e-3.)
Напишите программу, которая получает от пользователя строку и выводит в ответ Yes, если эта строка корректно задает вещественное число, в противном случае выводит No.

Примеры корректных записей:
0123
00.000
.15
165.
999999999999999999999999999999999.999999999999999999999
-1.0
-.35

Примеры некорректных записей:
1.2.3 (десятичная точка может быть только одна)
-. (должна быть хотя бы одна цифра в записи)
11e-3 (мы не разрешаем использовать символ e в записи)
+25 (мы не разрешаем использовать символ + в записи)

4. Подсчет количества слов
Напишите программу, которая считает количество слов в тексте, введенном пользователем. 
Словом считается любая последовательность символов (необязательно букв) без пробелов.
Пользователь вводит строку, состоящую из произвольных символов и пробелов. 
Программа должна вывести одно число — количество слов в введенной строке.
Замечание. Если вводить строку обычным способом с помощью команды std::cin >> s, то С++ проигнорирует все символы после первого пробела 
(потому что пробел по умолчанию считается концом вводимой строки). Чтобы ввести строку с пробелами, нужно вместо команды

std::cin >> s;
использовать команду
std::getline(std::cin, s);

Примеры:
Введите строку:
abcd abce skjc ahdy
Ответ: 4

Введите строку:
..33        !!@! WWW ))))))))))      __          ))
Ответ: 6

Введите строку:
                              _              

(много пробелов, затем один знак _ и еще много пробелов)
Ответ: 1

Введите строку:  

(несколько пробелов и больше ничего)
Ответ: 0

5. Из обычных чисел — в римские
Напишите программу, которая переводит данное пользователем число в римскую запись. 
Например, 19 в римской записи представляется как XIX.
Римская запись числа получается по следующим правилам. 
Сначала в ней идут буквы, описывающие количество тысяч в числе. 
Затем идут буквы, обозначающие количество сотен, затем буквы, обозначающие количество десятков, и в конце — буквы, обозначающие количество единиц. 
Для записи используются следующие буквы: 1 — I, 5 — V, 10 — X, 50 — L, 100 — C, 500 — D и 1000 — M. 
Число получается как сумма значений использованных в нем букв, за тем исключением, что если буква с меньшим значением идет перед буквой с большим значением, 
то ее значение вычитается из значения числа. Вычитание используется только в случае, когда надо передать цифру 4 или 9, в остальных случаях используется сложение. 
(Например, 9 обозначается как IX, 40 обозначается как XL). В числе запрещено писать более трех одинаковых букв подряд 
(таким образом, максимальное число, которое можно записать по этим правилам, равно 3999).

Программе на вход дается целое число из диапазона от 1 до 3999. 
(Вы можете считывать его как число или как строку, если так удобнее.)
Программа должна вывести римскую запись данного числа.

Примеры:
Ввод: 351
Вывод: CCCLI
Ввод: 449
Вывод: CDXLIX
Ввод: 1313
Вывод: MCCCXIII
Ввод: 2020
Вывод: MMXX