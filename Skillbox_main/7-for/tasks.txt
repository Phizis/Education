Задача 1. Инопланетная пища.
Ваш космический корабль потерпел крушение на пустынной планете. 
Еда здесь не растёт, но вы спасли из обломков 100-килограммовый мешок гречки. 
Из прошлого опыта вы знаете, что если будете экономно питаться, то у вас будет уходить по 4 килограмма гречки в месяц. 
Чтобы прикинуть гречневый бюджет, вы решили написать программу, которая выведет информацию о том, 
сколько килограммов гречки у вас должно быть в запасе через месяц, два и так далее, пока она не закончится. 
Используйте цикл for.

Задача 2. Кофемашина.
Инженеры компании “Спейс Инжиниринг” не могут продуктивно работать без кофе. 
Недавно в их кофемашину случайно попал космический луч и повредил программу-прошивку. 
Вас умоляют помочь.  Кофемашина умеет готовить два напитка: американо и латте. 
Для американо требуется 300 мл воды, а для латте 30 мл воды и 270 мл молока. 
Напишите программу, которая спрашивает у пользователя, сколько всего миллилитров молока и воды залито в кофемашину, 
после чего начинает обслуживание, спрашивая, какой напиток хочет очередной посетитель. 
Пользователь выбирает один из двух напитков, программа отвечает одним из трёх вариантов: 
“Ваш напиток готов”, “Не хватает воды” или “Не хватает молока”, после чего переходит к обслуживанию следующего посетителя. 
Выберите наиболее удобный для написания программы цикл. Обеспечьте контроль ввода.

Задача 3. Улучшенная кофемашина.
Сотрудники “Спейс Инжиниринг” всё ещё не очень довольны. 
Часто бывает, что они выбирают напиток, и только потом видят, что не хватает какого-то ингредиента. 
Модифицируйте программу так, чтобы если молока и воды не хватает ни на один из видов напитков, программа выдавала отчёт и завершалась. 
В отчёте должно быть написано, что ингредиенты подошли к концу, указан остаток воды и молока в машине, 
а также сколько всего было приготовлено чашек американо и латте за эту смену. Обеспечьте контроль ввода.

Задача 4. Красный Марс.
В “Спейс Инжиниринг” были впечатлены тем, как вы справились с кофемашиной и решили отдать вам на аутсорс разработку программы 
для нового робота-разведчика поверхности Марса. Это первый прототип, поэтому он тестируется в прямоугольном помещении размером 15 на 20 метров. 
Марсоход высаживается в центре комнаты, после чего управление им передаётся оператору — пользователю вашей программы. 
Программа спрашивает, в какую сторону оператор хочет направить робота: север (клавиша W), юг (клавиша S), запад (клавиша A) или восток (клавиша D). 
Оператор делает выбор, марсоход перемещается на 1 метр в эту сторону и программа сообщает новую позицию марсохода. 
Если марсоход упёрся в стену, то он не должен пытаться перемещаться в сторону стены, в этом случае его позиция не меняется.

Пример:
[Программа]: Марсоход находится на позиции 6, 19, введите команду:
[Оператор]: A
[Программа]: Марсоход находится на позиции 5, 19, введите команду:
[Оператор]: W
[Программа]: Марсоход находится на позиции 5, 20, введите команду:
[Оператор]: W
[Программа]: Марсоход находится на позиции 5, 20, введите команду:

Задача 5. Биолаборатория.
В борьбе со всемирной эпидемией королебактерий исследователи компании “Терран Биотех” открыли новый антибиотик. 
Напишите программу, помогающую протестировать его. В чашку Петри исследователи кладут N бактерий и добавляют X капель антибиотика. 
Известно, что число королебактерий в чашке Петри увеличивается в два раза каждый час, а каждая капля антибиотика в первый час убивает 10 бактерий, 
во второй час 9 бактерий, в следующий 8 и так далее, пока антибиотик не перестанет действовать. 
Заметьте, что сначала число королебактерий увеличивается, а затем действует антибиотик. 
Пользователь вашей программы вводит N и X, а программа печатает на экране сколько бактерий останется в чашке 
Петри в конце каждого часа до тех пор, пока не закончатся бактерии или антибиотик не перестанет действовать. 
Судьба человечества в ваших руках. Обеспечьте контроль ввода.

Задача 6. Рамка.
Напишите программу, которая рисует с помощью символьной графики прямоугольную рамку. 
Для вертикальных линий используйте символ вертикального штриха “|”, а для горизонтальных - дефис “-”. 
Пусть пользователь вводит ширину и высоту рамки.

Задача 7. Координатные оси.
Модифицируйте пример с координатными осями так, чтобы в точке их пересечения рисовался знак “+”, 
на верхнем конце вертикальной оси была стрелка вверх “^”, а на правом конце горизонтальной оси стрелка вправо “>”. 
Это сделает рисунок более красивым и точным.

Задача 8. Автограф разработчика.
Напишите программу, которая печатает на экране ваше имя в прямоугольной рамке. 
Для вертикальных линий используйте символ вертикального штриха “|”, а для горизонтальных - дефис “-”.
*картинка с примером*

Задача 9. Важные объявления.
Нам нужно написать программу для печати важных объявлений. Сверху объявления должен располагаться вот такой колонтитул: *картинка*

Восклицательные знаки всегда располагаются по центру строки, причём в зависимости от важности объявления количество восклицательных знаков может быть разным. 
Напишите программу, которая спрашивает у пользователя сначала общую длину колонтитула в символах, 
потом желаемое количество восклицательных знаков, после чего выводит на экран готовую строку. Обеспечьте контроль ввода.
Если невозможно разместить восклицательные знаки ровно по центру, допускается сдвиг на один символ.

Задача 10. Ёлочка.
Напишите программу, которая выводит на экран равнобедренный треугольник, заполненный символами решётки ‘#”. 
Пусть высота треугольника вводится пользователем. Обеспечьте контроль ввода.

Задача 11. Треугольник Паскаля.
Напишите программу, которая выводит на экран N первых строк треугольника Паскаля. N задаётся пользователем с клавиатуры. 
Треугольник Паскаля — это числа, расположенные в виде треугольника, где по краям стоят единицы, 
а каждое число внутри треугольника равно сумме двух чисел, расположенных над ним. Обеспечьте контроль ввода.
Пример (N = 5): *картинка*