#include <iostream>

int main() {
    using namespace std;

    std::string Planet;
    std::string Star;
    std::string Ranger;
    std::srand(1);
    int Money = std::rand() % 999999;

    std::cout << "Назовись путник!\n Введите имя: ";
    std::cin >> Ranger;
    std::cout << "С какой звездной системы тебя принесло?\n Введите систему: ";
    std::cin >> Star;
    std::cout << "А планету я сам должен угадать?\n Введите планету: ";
    std::cin >> Planet;
    std::cout << "\nКак вам, " << Ranger <<", известно, мы — раса мирная, поэтому на наших военных кораблях используются наемники с других планет. \nСистема набора отработана давным-давно. Обычно мы приглашаем на наши корабли людей с планеты " << Planet << " системы " << Star <<". \n\nНо случилась неприятность — в связи с большими потерями в последнее время престиж профессии сильно упал, и теперь не так-то просто завербовать призывников. \nГлавный комиссар планеты " << Planet <<", впрочем, отлично справлялся, но недавно его наградили орденом Сутулого с закруткой на спине, и его на радостях парализовало! \n\nПризыв под угрозой срыва! " << Ranger<<", вы должны прибыть на планету " << Planet << " системы " << Star << " и помочь выполнить план призыва. Мы готовы выплатить вам премию в " << Money << " кредитов за эту маленькую услугу.";

    cout << "\n\nМаршрутка\n\n";
    int n=0;
    int passCount=0;
    int passTotal=0;

    cout << "Прибываем на остановку Улица Программистов. В салоне пассажиров: " << passCount;
    cout << "\nСколько пассажиров зашло на остановке? ";
    cin >> n;
    passCount+=n;
    passTotal+=n;
    cout << "\nОтправляемся с остановки Улица Программистов. В салоне пассажиров: " << passCount;
    cout << "\n\n-----------Едем---------\n";
    cout << "\nПрибываем на остановку Проспект Алгоритмов. В салоне пассажиров: " << passCount;
    cout << "\nСколько пассажиров вышло на остановке? ";
    cin >> n;
    passCount-=n;
    cout << "Сколько пассажиров зашло на остановке? ";
    cin >> n;
    passCount+=n;
    passTotal+=n;
    cout << "\nОтправляемся с остановки Улица Алгоритмов. В салоне пассажиров: " << passCount;
    cout << "\n\n-----------Едем---------\n";
    cout << "\nПрибываем на остановку Проспект Алгоритмов. В салоне пассажиров: " << passCount;
    cout << "\nСколько пассажиров вышло на остановке? ";
    cin >> n;
    passCount-=n;
    cout << "Сколько пассажиров зашло на остановке? ";
    cin >> n;
    passCount+=n;
    passTotal+=n;
    cout << "\nОтправляемся с остановки Улица Алгоритмов. В салоне пассажиров: " << passCount;
    cout << "\n\n-----------Едем---------\n";
    cout << "\nПрибываем на остановку Проспект Алгоритмов. В салоне пассажиров: " << passCount;
    cout << "\nСколько пассажиров вышло на остановке? ";
    cin >> n;
    passCount-=n;
    cout << "Сколько пассажиров зашло на остановке? ";
    cin >> n;
    passCount+=n;
    passTotal+=n;
    cout << "\nОтправляемся с остановки Улица Алгоритмов. В салоне пассажиров: " << passCount;
    cout << "\n\n-----------Едем---------\n";
//Думал добавить пару переменных, чтобы собирать вошедших и вышедших, а потом "сложить". Но у нас в каждом предложении вывод общего количества, так что всё равно вычисления бы приходилось делать каждый раз.
    int payment=20;
    int moneyT;
    int driverSal;        //четверть
    int oil;              //1/5
    int taxes;            //1/5
    int maintenance;      //1/5
    int total;            //после вычета

    moneyT=passTotal*payment;
    driverSal=moneyT/4;
    oil=moneyT/5;
    taxes=moneyT/5;
    maintenance=moneyT/5;
    total=moneyT-driverSal-oil-taxes-maintenance;

    cout << "\nВсего заработали: " << moneyT<< " руб.";
    cout << "\nЗарплата водителя: " << driverSal << " руб.";
    cout << "\nРасходы на топливо: " << oil << " руб.";
    cout << "\nНалоги: " << taxes << " руб.";
    cout << "\nРасходы на ремонт машины: " << maintenance << " руб.";
    cout << "\nИтого доход: " << total << " руб.\n";

    cout << "\nСмена мест\n";
    int a = 42;
    int b = 153;
    int temp;
    cout << "a: " << a << "\n";
    cout << "b: " << b << "\n";
    temp=a;
    a=b;
    b=temp;
    cout << "a: " << a << "\n";
    cout << "b: " << b << "\n";
    a=a*b;
    b=a/b;
    a=a/b;
    cout << "a: " << a << "\n";
    cout << "b: " << b << "\n";
// сложение/вычитание не подходит, потому что проблемы со знаками, либо брать по модулю. Возможны некоторые несостыковки с дробными числами, но надо проверять. Плюс видимо в том, что мы не плодим новые переменные, минус в том, что необходимы вычисления, можно забыть или запутаться, если мы будем возвращаться к подобному коду через какое-то время. Обычное присвоение через 3ю переменную более очевидно. Каких-то других плюсов или проблем не нашел.

    cout << "\nБамбук VS Вредители!\n";

    int startHeight = 100;
    int growth = 50;
    int losses = 20;
    int days=0;
    int currentH=startHeight;
    int thirdDayHeight = startHeight + ((growth - losses) * 2 + (growth / 2));

    cout << "\nВысота бамбука к середине 3 дня: " << thirdDayHeight << ".\n";

    while ( currentH < 300 ) {
        currentH = currentH + growth - losses;
        days++;
    }
    cout << "Бамбук вырастет до 3-х метров за "<< days << " дней. Сейчас длинна бамбука - " << currentH << " метров\n";

    int days2=0;                  //2й счетчик дней, чтобы не запутаться
    int daysCin;                //для ввода дней
    int prefH;                  //предпочитаемая высота
    int daysH;

    cout << "\nВведите длинну саженца бамбука ";
    cin >> startHeight;
    daysH = startHeight;
    currentH = startHeight;
    cout << "На сколько вырастает бамбук за день? ";
    cin >> growth;
    cout << "Как много съедают гусеницы? ";
    cin >> losses;
    cout << "На какой день вы хотите узнать длинну бамбука? ";
    cin >> daysCin;
    cout << "Напишите, какая длинна вам необходима, а мы рассчитаем день. ";
    cin >> prefH;

    cout << "Длинна бамбука на " << daysCin << " сутки будет составлять ";
    daysH = startHeight + (growth - losses)*daysCin;
    cout << daysH << " сантиметров \n";
    days2 = (prefH - startHeight)/(growth - losses);
    //из-за дроби погрешность на 1 день
    cout << "Бамбук вырастет до " << prefH << " сантиметров за " << days2 << " суток";
}